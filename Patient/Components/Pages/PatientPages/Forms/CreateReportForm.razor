@layout Patient.Components.Layout.UserLayout
@rendermode InteractiveServer


@page "/pacjent/dodaj-raport"
@using Patient.Domain.Entities
@using Patient.Domain.Entities.DTOs


<div class="page-background">

    <div class="container px-4">
        <div class="row pt-5">
            <div class="col justify-content-start align-content-start">
                <btn type="button" class="back-icon bi-arrow-left"></btn>
            </div>
            <div class="col">
                <h2 class="text-center">Dodaj raport</h2>
            </div>
            <div class="col">

            </div>
        </div>
    </div>

    <div class="container px-4">
        
        <EditForm method="post" Model="@report" FormName="CreateReport" Enhance>
            <div class="row pt-5">
                <div class="col-4 d-flex d-flex-column justify-content-center align-content-center align-items-center">

                    <h3>Opis</h3>

                </div>
                <div class="col-8 d-flex">
                    <div>

                        <InputTextArea id="description" @bind-Value="report.Description" class="form-control width-100"></InputTextArea>

                    </div>
                    
                </div>

            </div>
            <div class="row pt-5">
                <div class="col-4 d-flex d-flex-column justify-content-center align-content-center align-items-center">

                    <h3>Pliki</h3>

                </div>  
                <div class="col-8 d-flex d-flex-column">
                    <div>

                        <InputFile OnChange="HandleFileSelected" multiple id="File" class="form-control"></InputFile>

                    </div>
                    @if (filesPreview.Count > 0)
                    {
                        <div class="d-flex d-flex-row pt-5">

                            @foreach (var file in filesPreview)
                            {
                                <div>
                                    <div class="file-block mx-2">
                                        <div @onclick="() => HandleEraseFile(file)" class="bi-x-circle"></div>
                                        <div class="bi-file-icon"></div>
                                        <p class="font-10px text-center">@file.Name</p>
                                    </div>

                                </div>
                                

                            }

                        </div>

                        
                    }
                </div>

            </div>
        </EditForm>
        
    </div>

</div>

@code {

    private ReportDto report = new();
    private List<Stream> files = new();
    private List<string> filePreviewUrls = new List<string>();
    private List<IBrowserFile> filesPreview = new ();

    private string filePreviewUrl;
    private int maxAllowedSize = 10 * 1024 * 1024;

    private async void HandleFileSelected(InputFileChangeEventArgs e)
    {
        var currentGivenFiles = e.GetMultipleFiles();
        files = report.Files.ToList();

        if (currentGivenFiles.Count > 0)
        {
            foreach(var file in currentGivenFiles)
            {

                filesPreview.Add(file);

            }

        }
    }

    private async void HandleEraseFile(IBrowserFile file)
    {
        filesPreview.Remove(file);
    }

    private async void MakeFileStreams()
    {
        files.Clear();

        foreach (var file in filesPreview)
        {
            using (var stream = file.OpenReadStream(maxAllowedSize))
            {

                //var buffer = new byte[file.Size];
                //await stream.ReadAsync(buffer);
                //filePreviewUrl = $"data:image/{file.ContentType.Split('/')[1]};base64,{Convert.ToBase64String(buffer)}";
                //filePreviewUrls.Add(filePreviewUrl);
                files.Add(stream);

            }


        }
        report.Files = files;
        //albo odpalac to za kazdym usunieciem - albo po prostu na koncu gdy zdjecia sa juz zaladowane to odpalic te streamy ;)
    }
}
