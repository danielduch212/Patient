@using Patient.Domain.Entities.DTOs.Reports
@using Shared.Constants
@using Shared.AdditionalClasses
@using Patient.Domain.Entities.Additional

<div class="container" style="max-width: 70%; color: white;">

    <h2 class="text-center">Raport            Data: @ReportToShow.DateOfCreating</h2>
    @if (!loading)
    {
        <MudPaper Class="pa-8 ma-2" Elevation="3">
            <section>
                <div class="row">
                    <div class="col-4 d-flex justify-content-center">
                        <btn type="button" class="highlight-on-hover" @onclick="HandleShowPatientModal">
                            <div class="img-avatar" style="max-width: 150px;">
                                <img src="/images/icons/patientIcon.jpg" />
                            </div>
                        </btn>
                        
                    </div>
                    <div class="col text-start">
                        <small>Imie i nazwisko</small>
                        <h3>@CurrentPatient.Name @CurrentPatient.Surname</h3>
                        <small>Pesel</small>
                        <h3> @CurrentPatient.Pesel</h3>
                    </div>

                </div>
            </section>
        </MudPaper>

        @* <section class="p-3 mb-4 bg-light">
    <div class="row">
    <h4 style="text-decoration: underline;">Przebieg choroby</h4>
    </div>
    </section> *@
        <MudPaper Class="pa-8 ma-2" Elevation="3">
            <section class="mt-4 mb-4">
                <div class="row d-flex">
                    <div class="col-4 d-flex justify-content-center align-content-center">
                        <img src="/images/Reports/heartMeassureIconServer.png" style="max-width: 150px;" />
                    </div>
                    <div class="col justify-content-center">
                        <h3 class="py-5">Samopoczucie pacjenta:  </h3>
                        <div class="d-flex ">
                            @for (int i = 0; i < ReportToShow.PatientsHealthRating; i++)
                            {
                                <div class="bi-heart-icon bi-heart-fill"></div>
                            }
                            @for (int i = 0; i < (10 - ReportToShow.PatientsHealthRating); i++)
                            {
                                <div class="bi-heart-icon bi-heart-unfill"></div>
                            }
                        </div>
                    </div>
                </div>
            </section>
        </MudPaper>

        <MudPaper Class="pa-8 ma-2" Elevation="3">
            <section>
                <div class="row">
                    <div class="col-4 d-flex justify-content-center align-content-center">
                        <img src="/images/Reports/questionsIconServer.png" style="max-width: 150px; max-height: 150px;" />
                    </div>
                    <div class="col d-flex align-content-center text-start">
                        <h3>Pytania i odpowiedzi</h3>
                    </div>
                </div>
                <div class="row">
                    <div class="accordion" id="accordionQuestions">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headerAccordionQuestions">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseQuestions" aria-expanded="true" aria-controls="collapseQuestions" />
                            </h2>
                            <div id="collapseQuestions" class="accordion-collapse collapse" aria-labelledby="headerAccordionQuestions" data-bs-parent="#accordionQuestions">
                                <div class="accordion-body">
                                    <div class="list-group">
                                        @foreach (var item in @patientsAnswers)
                                        {
                                            <div class="list-group-item" @key="item.Id">
                                                <div class="row mt-2 mb-2 justify-content-center text-start">
                                                    <strong class="text-start">@questionList[item.Id]</strong>
                                                    <small>@item.Answer</small>
                                                </div>
                                            </div>
                                        }
                                        <div class="list-group-item">
                                            <strong>Dodatkowy opis</strong>
                                            <small>@ReportToShow.Description</small>
                                        </div>
                                    </div>
                                   
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </MudPaper>

        <MudPaper Class="pa-8 ma-2" Elevation="3">
            <section>
                <div class="row">
                    <div class="col-4 d-flex justify-content-center align-content-center">
                        <img src="/images/Reports/diseaseImage.png" style="max-width: 150px; max-height: 150px;" />
                    </div>
                    <div class="col">
                        <h5 class="text-start">Objawy</h5>
                        <div class="row d-flex mt-4 mb-4">
                            @foreach (var item in ReportToShow.PatientsSymptoms)
                            {
                                <span class="badge badge-item-custom mr-2 mb-2">@item</span>
                            }
                        </div>
                    </div>
                </div>
            </section>
        </MudPaper>

        <MudPaper Class="pa-8 ma-2" Elevation="3">
            <section>
                <div class="row">
                    <div class="col-4 d-flex align-items-center align-content-center justify-content-center">
                        <img src="/images/Reports/logoFolder.png" style="max-width: 100px; max-height: 100px;" />
                    </div>
                    <div class="col">
                        <h4>Pliki</h4>
                        @foreach (var filePreviewData in ReportToShow.FilesPreviewData)
                        {
                            <div class="bi-file-icon mx-2" style="cursor: pointer;" @onclick="() => HandleShowFile(filePreviewData)"></div>
                        }                       
                    </div>
                </div>
            </section>
        </MudPaper>

        @* <section >
            <div class="row">
            <h4>Prosby</h4>
            </div>
        </section> *@
    }
    else
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true"></MudProgressCircular>
    }

</div>
@if (showPreviewFileModal)
{

    <Patient.Api.Components.Pages.AdditionalComponents.PreviewFileModal CurrentFileBase64="@filePreviewDataToShow.FileBase64"
                                                                        CurrentFileName="@filePreviewDataToShow.FileName" OnClose="CloseModalFilePreview" 
                                                                        CustomStyle="custom-style-class" />

}
@if (showPatientModal)
{
    <CascadingValue Value="CurrentPatient" >
        <Patient.Api.Components.Pages.DoctorPages.Patients.PatientPreviewModal tokenSource="TokenSource" OnClose="HandleClosePatientModal" />
    </CascadingValue>
    
}


@code {
    [CascadingParameter]
    public ReportForDoctorToShowDto ReportToShow { get; set; }

    [Parameter]
    public CancellationTokenSource TokenSource { get; set; }

    [Parameter]
    public Patient.Domain.Entities.Actors.Patient CurrentPatient { get; set; }

    private bool loading;
    private List<string> questionList = new();
    private List<Shared.AdditionalClasses.AnswerItem> patientsAnswers = new();


    //PreviewFileModal
    private bool showPreviewFileModal;
    private FilePreviewData filePreviewDataToShow = new();

    //showpatient
    private bool showPatientModal;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        await Task.Delay(200);
        loading = false;
        questionList = QuestionsForReport.GetAllQuestions();
        MakeAnswearElements();
        StateHasChanged();
    }

    private async void MakeAnswearElements()
    {
        for (int i = 0; i < ReportToShow.PatientsAnswersForQuestions.Count(); i++)
        {
            patientsAnswers.Add(new AnswerItem
                {
                    Id = i,
                    Answer = ReportToShow.PatientsAnswersForQuestions[i]
                });
        }
    }

    //file

    private void HandleShowFile(FilePreviewData filePreviewData)
    {
        filePreviewDataToShow = filePreviewData;
        showPreviewFileModal = true;

        StateHasChanged();
    }

    private void CloseModalFilePreview()
    {
        showPreviewFileModal = false;
        StateHasChanged();
    }

    // showPatient modal
    private void HandleShowPatientModal()
    {
        showPatientModal = true;
    }

    private void HandleClosePatientModal()
    {
        showPatientModal = false;
    }

    
}
