@layout Patient.Api.Client.Layout.UserLayout
@rendermode @(new InteractiveServerRenderMode(false))
@page "/pacjent"
@attribute [Authorize(Roles = UserRoles.Patient)]

@using Patient.Domain.Constants;
@using Patient.Api.Extensions;
@using Patient.Domain.Repositories

@inject Microsoft.JSInterop.IJSRuntime _jsRuntime
@inject NavigationManager _navigationManager
@inject UserManager<Patient.Domain.Entities.Actors.Patient> _patientManager
@inject IHttpContextAccessor httpContextAccesor
@inject IDiseaseRepository _diseaseRepository


<div class="container px-4">
    @if(patientsCurrentlyCuredDiseasesNumber==0 && isCount==true)
    {
        <MudPaper Class="pa-4 summary-item" Elevation="3" Style="cursor: pointer;" @onclick='() => RedirectTo("wywiad")'>
            <div class="row">
                <h2>Kliknij tutaj aby wypełnić informacje o swoim zdrowiu</h2>
            </div>
        </MudPaper>
        

    }
    <div class="row">
        @if (isInitialized)
        {
            <CascadingValue Value="currentPatient">
                <Patient.Api.Components.Pages.PatientPages.MainPanel.AdditionalComponents.SummaryComponent />
            </CascadingValue>
        }
        else
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" Size="Size.Large"/>

        }
        
    </div>
    
    
</div>




@code {

    private Patient.Domain.Entities.Actors.Patient currentPatient { get; set; } = new();
    private int patientsCurrentlyCuredDiseasesNumber { get; set; }

    private bool isInitialized;
    private bool isCount;

    protected override async Task OnInitializedAsync()
    {
        currentPatient = await _patientManager.GetUserAsync(httpContextAccesor.HttpContext.User);

        patientsCurrentlyCuredDiseasesNumber = await _diseaseRepository.CountPatientsCurrentDiseases(currentPatient.Id);
        isCount = true;

        isInitialized = true;
        StateHasChanged();

    }

    private void RedirectTo(string path)
    {
        _navigationManager.NavigateTo($"/pacjent/{path}");
    }
    
}
