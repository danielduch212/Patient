@layout Patient.Api.Client.Layout.MyAccount.PatientAccountLayout

@rendermode @(new InteractiveServerRenderMode(false))


@page "/pacjent/dokumentacja-medyczna"

@using Patient.Domain.Interfaces
@using Patient.Domain.Entities.DTOs
@using System.Net.Http 
@using Patient.Domain.Entities.DTOs.MedicalFiles
@using MudBlazor

@inject NavigationManager navigationManager 
@inject IPatientApiService _patientApiService
@inject IManageService _manageService

@implements IDisposable




<div class="container pt-5 w-100">
    <h3 class="text-center" style="color: white;">Dokumentacja medyczna</h3>
    <div class="row d-flex justify-content-center align-items-center">
        <NavLink class="btn btn-outline-primary btn-custom-outline text-center w-25" href="/pacjent/dokumentacja-medyczna/dodaj">
            Dodaj plik
        </NavLink>
    </div>
    <h2 class="pt-5">Twoje pliki</h2>
    <Patient.Api.Components.Pages.PatientPages.MedicalDocumentation.AdditionalComponents.PatientsDocumentationComponent TokenSource="TokenSource"/>
    


</div>


@code {
    private CancellationTokenSource TokenSource = new();

    

    protected async override Task OnInitializedAsync()
    {
        try
        {
            
        }
        catch(OperationCanceledException e)
        {
            
        }
        

    }

    public void Dispose()
    {
        TokenSource.Cancel();
        TokenSource.Dispose();
    }
}
