
@inject UserManager<Patient.Domain.Entities.Actors.Patient> _patientManager

<div class="container">
    <div class="row d-flex">
        <strong>Podaj stare hasło: </strong>
        <MudTextField @bind-Value="@oldPassword" 
            Immediate="false" Label="Wpisz tutaj" 
                        class="form-control"
                      Variant="Variant.Text"
                      InputType="InputType.Password">
        </MudTextField>
    </div>
    <div class="row">
        <strong>Podaj nowe hasło: </strong>
        <MudTextField @bind-Value="@newPassword"
                      Immediate="false" Label="Wpisz tutaj"
                      class="form-control"
                      Variant="Variant.Text"
                      InputType="InputType.Password">
        </MudTextField>
    </div>

    <div class="row">
        <strong>Powtórz stare hasło: </strong>
        <MudTextField @bind-Value="@newPasswordAgain"
                      Immediate="false" Label="Wpisz tutaj"
                      class="form-control"
                      Variant="Variant.Text"
                      InputType="InputType.Password">
        </MudTextField>
    </div>
    <div class="row text-center">
        <btn type="button" class="btn btn-outline-primary btn-accept" @onclick="HandleChangePassword">
            Zatwierdz
        </btn>
    </div>

</div>

@code {

    [CascadingParameter]
    public Patient.Domain.Entities.Actors.Patient CurrentPatient { get; set; } = new();

    private string oldPassword = "";
    private string newPassword = "";
    private string newPasswordAgain = "";

    private string errorMessage = "";

    private async void HandleChangePassword()
    {
        if (newPasswordAgain=="" && newPassword != newPasswordAgain)
        {

            return;
        }


        var tryChangePassword = await _patientManager.ChangePasswordAsync(CurrentPatient, oldPassword, newPassword);
        if (!tryChangePassword.Succeeded)
        {
            //pokaz blad
        }
        else
        {
            //sukces
        }
    }
}
