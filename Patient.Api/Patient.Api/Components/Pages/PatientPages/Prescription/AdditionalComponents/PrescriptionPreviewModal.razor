@using static Patient.Api.Components.Pages.PatientPages.Prescription.AdditionalComponents.PatientsPrescriptionsComponent
@using Patient.Domain.Repositories
@using Patient.Domain.Entities
@using Patient.Domain.Entities.DTOs.Prescription

@inject IPrescriptionRepository _prescriptionRepository
@inject IDoctorsRepository _doctorsRepository


<div class="modal-backdrop">
    <div class="modal" tabindex="-1" style="display:block;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Recepta</h5>
                <button type="button" class="btn-close" @onclick="CloseModal"></button>
            </div>
            <div class="modal-body">
                @if (loading)
                {
                    <div class="row text-center">
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true"></MudProgressCircular>
                    </div>

                }
                else
                {
                    <div class="container">
                        <div class="row">
                            <p>Kod recepty</p>
                            <small>Data wystawienia: @prescription.DateOfIssue</small>
                            <small>Data ważności: @prescription.DateOfExpiration</small>
                        </div>
                        <div class="row">
                            <div class="col">
                                <p>Lekarz wystawiający</p>
                                <small>@prescription.DoctorName</small>
                                <small>@prescription.DoctorSurname</small>
                                @* <small>@doctor.DoctorNumber</small> *@
                            </div>
                            <div class="col">
                                <p>Dane pacjenta</p>
                                <small>@PrescriptionData.CurrentPatient.Name</small>
                                <small>@PrescriptionData.CurrentPatient.Surname</small>
                                <small>@PrescriptionData.CurrentPatient.Pesel</small>
                            </div>
                        </div>
                        <div class="row">
                            <p>Leki</p>
                            @foreach(var medicineName in prescription.MedicineNames)
                            {
                                <small>@medicineName</small>
                            }
                            
                        </div>
                        <div class="row">
                            <p>Opis dawkowania</p>
                            <p>@prescription.Description</p>
                        </div>                    
                    </div>
                }               
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-primary btn-custom-outline" @onclick="CloseModal">Zamknij</button>

            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    PrescriptionPreviewData PrescriptionData { get; set; } = new();

    [Parameter]
    public EventCallback OnClose { get; set; }
    [Parameter]
    public CancellationTokenSource SourceToken { get; set; } 

    private bool loading;
    PrescriptionToShowPatientDto prescription = new();


    protected override async Task OnInitializedAsync()
    {
        loading = true;
        prescription = PrescriptionData.CurrentPrescription;
        await Task.Delay(1000);
        loading = false;
        StateHasChanged();
    }


    private async Task CloseModal()
    {
        await OnClose.InvokeAsync();
    }
}
